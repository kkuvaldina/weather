{"version":3,"sources":["components/WeatherItem.js","components/WeatherList.js","components/SearchForm.js","components/WeatherItemClicked.js","components/App.js","index.js"],"names":["WeatherItem","city","onItemSelect","onClick","name","sys","country","coord","lat","lon","main","temp","WeatherList","cityList","renderedList","map","className","key","id","SearchForm","state","onFormSubmit","event","preventDefault","props","onSubmit","this","type","placeholder","value","onChange","setState","target","React","Component","WeatherItemClicked","selectedCity","src","weather","icon","alt","description","feels_like","humidity","App","axios","get","then","response","data","list","catch","error","console","log","ReactDOM","render","document","querySelector"],"mappings":"2OAmBeA,EAjBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC3B,OACE,yBAAKC,QAAS,kBAAMD,EAAaD,KAC/B,2BACGA,EAAKG,KADR,KACgBH,EAAKI,IAAIC,SAEzB,2CACgBL,EAAKM,MAAMC,IAD3B,KACkCP,EAAKM,MAAME,KAE7C,6BACGR,EAAKS,KAAKC,KACX,4CCEOC,EAZK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUX,EAAmB,EAAnBA,aACzBY,EAAeD,EAASE,KAAI,SAAAd,GAChC,OACE,yBAAKe,UAAU,2BACb,kBAAC,EAAD,CAAaC,IAAKhB,EAAKiB,GAAIhB,aAAcA,EAAcD,KAAMA,QAKnE,OAAO,6BAAMa,IC4BAK,E,2MApCbC,MAAQ,CAAEnB,KAAM,I,EAEhBoB,aAAe,SAAAC,GACbA,EAAMC,iBAEN,EAAKC,MAAMH,aAAa,EAAKD,MAAMnB,O,wEAG3B,IAAD,OACP,OACE,yBAAKe,UAAU,uBACb,0BAAMS,SAAUC,KAAKL,aAAcL,UAAU,WAC3C,yBAAKA,UAAU,YACb,2BACEW,KAAK,OACLC,YAAY,aACZC,MAAOH,KAAKN,MAAMnB,KAClB6B,SAAU,SAAAR,GAAK,OAAI,EAAKS,SAAS,CAAE9B,KAAMqB,EAAMU,OAAOH,YAG1D,4BAAQb,UAAU,0CAAlB,WAKF,yBAAKA,UAAU,oCACb,kBAAC,EAAD,CACEH,SAAUa,KAAKF,MAAMX,SACrBX,aAAcwB,KAAKF,MAAMtB,qB,GA7BZ+B,IAAMC,WC0BhBC,EA3BY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,OAAKA,EAIH,yBAAKpB,UAAU,mCACb,yBACEqB,IAAG,0CAAqCD,EAAaE,QAAQ,GAAGC,KAA7D,QACHC,IAAKJ,EAAaE,QAAQ,GAAGG,cAE/B,2BACGL,EAAahC,KADhB,KACwBgC,EAAa/B,IAAIC,SAEzC,2CACgB8B,EAAa7B,MAAMC,IADnC,KAC0C4B,EAAa7B,MAAME,KAE7D,6BACG2B,EAAa1B,KAAKC,KACnB,0CAEF,6BAAMyB,EAAaE,QAAQ,GAAGG,aAC9B,4CAAkBL,EAAa1B,KAAKgC,WAAW,0CAC/C,0CAAgBN,EAAa1B,KAAKiC,WApB7B,+B,iBC0CIC,E,2MAxCbxB,MAAQ,CACNP,SAAU,GACVuB,aAAc,M,EAGhBf,aAAe,SAAApB,GACb4C,IACGC,IADH,yDAEsD7C,EAFtD,2DAIG8C,MAAK,SAAAC,GACJ,EAAKjB,SAAS,CACZlB,SAAUmC,EAASC,KAAKC,UAG3BC,OAAM,SAAAC,GACLC,QAAQC,IAAI,QAASF,O,EAI3BlD,aAAe,SAAAD,GACb,EAAK8B,SAAS,CAAEK,aAAcnC,IAC9B,EAAK8B,SAAS,CAAElB,SAAU,M,wEAI1B,OACE,yBAAKG,UAAU,+BACb,kBAAC,EAAD,CAAYK,aAAcK,KAAKL,aAC/BR,SAAUa,KAAKN,MAAMP,SACrBX,aAAcwB,KAAKxB,eAEnB,yBAAKc,UAAU,mBACb,kBAAC,EAAD,CAAoBoB,aAAcV,KAAKN,MAAMgB,qB,GAlCrCH,IAAMC,W,MCAxBqB,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,Y","file":"static/js/main.5c1adf01.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WeatherItem = ({ city, onItemSelect }) => {\r\n  return (\r\n    <div onClick={() => onItemSelect(city)}>\r\n      <p>\r\n        {city.name}, {city.sys.country}\r\n      </p>\r\n      <p>\r\n        Coordinates: {city.coord.lat}, {city.coord.lon}\r\n      </p>\r\n      <div>\r\n        {city.main.temp}\r\n        <span> &#8457;</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherItem;\r\n","import React from \"react\";\r\nimport WeatherItem from \"./WeatherItem\";\r\n\r\nconst WeatherList = ({ cityList, onItemSelect }) => {\r\n  const renderedList = cityList.map(city => {\r\n    return (\r\n      <div className=\"ui segment weathmer-ite\">\r\n        <WeatherItem key={city.id} onItemSelect={onItemSelect} city={city} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <div>{renderedList}</div>;\r\n};\r\n\r\nexport default WeatherList;\r\n","import React from \"react\";\r\nimport WeatherList from \"./WeatherList\";\r\n\r\nclass SearchForm extends React.Component {\r\n  state = { city: \"\" };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onFormSubmit(this.state.city);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"weather-list-parent\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"ui input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter City\"\r\n              value={this.state.city}\r\n              onChange={event => this.setState({ city: event.target.value })}\r\n            />\r\n          </div>\r\n          <button className=\"ui center floated secondary button m-2\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"ui compact segments weather-list\">\r\n          <WeatherList\r\n            cityList={this.props.cityList}\r\n            onItemSelect={this.props.onItemSelect}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nconst WeatherItemClicked = ({ selectedCity }) => {\r\n  if (!selectedCity) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div className=\"ui segment weather-item-clicked\">\r\n      <img\r\n        src={`http://openweathermap.org/img/w/${selectedCity.weather[0].icon}.png`}\r\n        alt={selectedCity.weather[0].description}\r\n      />\r\n      <p>\r\n        {selectedCity.name}, {selectedCity.sys.country}\r\n      </p>\r\n      <p>\r\n        Coordinates: {selectedCity.coord.lat}, {selectedCity.coord.lon}\r\n      </p>\r\n      <div>\r\n        {selectedCity.main.temp}\r\n        <span> &#8457;</span>\r\n      </div>\r\n      <div>{selectedCity.weather[0].description}</div>\r\n      <div>Feels like: {selectedCity.main.feels_like}<span> &#8457;</span></div>\r\n      <div>Humidity: {selectedCity.main.humidity}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherItemClicked;\r\n","import React from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport WeatherItemClicked from \"./WeatherItemClicked\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    cityList: [],\r\n    selectedCity: null\r\n  };\r\n\r\n  onFormSubmit = city => {\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/find?q=${city}&units=imperial&appid=34aaa0e555c329549590da7f88d639b3`\r\n      )\r\n      .then(response => {\r\n        this.setState({\r\n          cityList: response.data.list\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  };\r\n\r\n  onItemSelect = city => {\r\n    this.setState({ selectedCity: city });\r\n    this.setState({ cityList: []});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui center aligned container\">\r\n        <SearchForm onFormSubmit={this.onFormSubmit} \r\n        cityList={this.state.cityList}\r\n        onItemSelect={this.onItemSelect}/>\r\n        \r\n        <div className=\"ten wide column\">\r\n          <WeatherItemClicked selectedCity={this.state.selectedCity} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));\r\n \r\n"],"sourceRoot":""}